#+TITLE: =D R A F T B O Y S=
#+AUTHOR: Jacob MacDonald

#+BEGIN_SRC text :tangle UNLICENSE :padline no
  This is free and unencumbered software released into the public domain.

  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this
  software, either in source code form or as a compiled binary, for any purpose,
  commercial or non-commercial, and by any means.

  In jurisdictions that recognize copyright laws, the author or authors of this
  software dedicate any and all copyright interest in the software to the public
  domain. We make this dedication for the benefit of the public at large and to
  the detriment of our heirs and successors. We intend this dedication to be an
  overt act of relinquishment in perpetuity of all present and future rights to
  this software under copyright law.

  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
  AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
  WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

  For more information, please refer to <http://unlicense.org/>
#+END_SRC

Some of the most fun DotA 2 games I've played have been the ones played with
friends playing specific heroes in a prepared strategy. And as the group of
friends I play with comes closer to forming an actual team, drafting theory
becomes more and more important.

=D R A F T B O Y S= is an application I hope will be helpful for myself, my
friends, and people with similar goals in DotA 2. It is also a project which
will help me practice Cordova, Nim, literate programming, and App Engine.

* Build and run.

  To build and run =D R A F T B O Y S= you will need:

  * [[http://cordova.apache.org/docs/en/edge/guide_cli_index.md.html#The%2520Command-Line%2520Interface][Cordova CLI with Android platform.]]
  * [[http://nim-lang.org/download.html][Nim.]]

  First, compile the Nim project into JavaScript.

  #+BEGIN_SRC sh
    nim js -o:www/js/draftboys.js src/draftboys
  #+END_SRC

  Then, run the Cordova app on a device or emulator.

  #+BEGIN_SRC sh
    cordova run
  #+END_SRC

  Or test it in a browser.

  #+BEGIN_SRC sh
    cordova browse
  #+END_SRC

* Configure Cordova.

  The file layout of a Cordova project is way too complicated to put in a
  literate program in anything close to a complete form. For more help on
  Cordova's specifics, check out the [[http://cordova.apache.org/docs/en/edge/index.html][documentation for the latest version]].

  The one Cordova file I will write in literate form is =config.xml=. The most
  important things in this file are the version (which will change often) and
  the app metadata (which should not have to change very often). Everything
  else is copied from the default Cordova project's =config.xml=.

  #+NAME: config.xml
  #+BEGIN_SRC xml
    <?xml version='1.0' encoding='utf-8'?>
    <widget id="com.jaccarmac.draftboys" version="0.4.3"
            xmlns="http://www.w3.org/ns/widgets"
            xmlns:cdv="http://cordova.apache.org/ns/1.0">
      <name>DRAFTBOYS</name>
      <description>
        Create, manage, and share DotA 2 drafts.
      </description>
      <author email="jaccarmac@gmail.com" href="http://jaccarmac.com">
        Jacob MacDonald
      </author>
      <content src="index.html" />
      <access origin="*" />
    </widget>
  #+END_SRC

* Provide content for single-page app.

  =D R A F T B O Y S= is a single-age app, so all the content for it is stored
  in one HTML file.

  The beginning of the file contains metadata, a CSS ~link~, and a declaration
  of a ~div~ with a class of ~app~. All content will be put in ~app~.

  #+NAME: index.html-header
  #+BEGIN_SRC web
    <!doctype html>
    <html>
        <head>
            <meta charset="utf-8" />
            <meta name="format-detection" content="telephone=no" />
            <meta name="msapplication-tap-highlight" content="no" />
            <meta name="viewport" content="user-scalable=no, initial-scale=1,
                                           maximum-scale=1, minimum-scale=1,
                                           width=device-width,
                                           height=device-height,
                                           target-densitydpi=device-dpi" />
            <link rel="stylesheet" type="text/css" href="css/draftboys.css">
            <title>D R A F T B O Y S</title>
        </head>
        <body>
            <div class="app">
  #+END_SRC

  The end of the file include relevant JavaScript and closes all the relevant
  tags.

  #+NAME: index.html-footer
  #+BEGIN_SRC web
            </div>
            <script type="text/javascript" src="cordova.js"></script>
            <script type="text/javascript" src="js/draftboys.js"></script>
        </body>
    </html>
  #+END_SRC

  This is a placeholder tag with an ID to hook onto.

  #+NAME: index.html-placeholder
  #+BEGIN_SRC web
    <h1 id="placeholder"></h1>
  #+END_SRC

* Style the document.

  This section is a placeholder for now.

* Implement app behavior.

  The meat of the project is the actual behavior, which is implemented in Nim
  before it gets compiled to JavaScript. Nim has a pretty good ~dom~ module and
  an excellent FFI for JavaScript which we can use to fill in the holes in
  ~dom~.

  This section will contain subsections as the app matures. For now, here is
  some simple placeholder behavior. A placeholder listener is bound to the
  ~deviceready~ event.

  #+NAME: draftboys.nim-placeholder
  #+BEGIN_SRC nim
    import dom

    proc placeholderListener(event: ref TEvent) =
      document.getElementById("placeholder").innerHTML = "Hello from Nim!"

    document.addEventListener("deviceready", placeholderListener)
  #+END_SRC

* Tangle source code.

** =config.xml=

   #+BEGIN_SRC xml :noweb no-export :tangle config.xml :padline no
     <<config.xml>>
   #+END_SRC

** =www/index.html=

   #+BEGIN_SRC web :noweb no-export :tangle www/index.html :padline no
     <<index.html-header>>
     <<index.html-placeholder>>
     <<index.html-footer>>
   #+END_SRC

** =www/css/draftboys.css=

   #+BEGIN_SRC web :noweb no-export :tangle www/css/draftboys.css :padline no

   #+END_SRC

** =src/draftboys.nim=

   #+BEGIN_SRC nim :noweb no-export :tangle src/draftboys.nim :padline no
     <<draftboys.nim-placeholder>>
   #+END_SRC
